using System;

namespace NumberSorter.Domain.Tests
{
    public readonly struct Vector2Int : IEquatable<Vector2Int>
    {
        public int Min { get; }
        public int Max { get; }

        public Vector2Int(int min, int max)
        {
            Min = min;
            Max = max;
        }

        #region Equality stuff generated by ide

        public override bool Equals(object obj)
        {
            return obj is Vector2Int @int && Equals(@int);
        }

        public bool Equals(Vector2Int other)
        {
            return Min == other.Min &&
                   Max == other.Max;
        }

        public override int GetHashCode()
        {
            var hashCode = 1537547080;
            hashCode = hashCode * -1521134295 + Min.GetHashCode();
            hashCode = hashCode * -1521134295 + Max.GetHashCode();
            return hashCode;
        }

        public static bool operator ==(Vector2Int left, Vector2Int right)
        {
            return left.Equals(right);
        }

        public static bool operator !=(Vector2Int left, Vector2Int right)
        {
            return !(left == right);
        }

        #endregion
    }
}